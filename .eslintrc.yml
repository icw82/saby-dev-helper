env:
  browser: true
  es2020: true
  webextensions: true
extends:
  - 'eslint:recommended'
  - 'plugin:sonarjs/recommended'
  - 'plugin:@typescript-eslint/eslint-recommended'
  - 'plugin:@typescript-eslint/recommended'
  - 'plugin:@typescript-eslint/recommended-requiring-type-checking'
parser: '@typescript-eslint/parser'
parserOptions:
  ecmaVersion: 11
  tsconfigRootDir: '.'
  project: 'tsconfig.json'
  sourceType: module
plugins:
  - 'promise'
  - 'sonarjs'
  - '@typescript-eslint'
rules:
  "@typescript-eslint/member-delimiter-style":
    - error
  "@typescript-eslint/semi":
    - error
  "@typescript-eslint/type-annotation-spacing":
    - error
  "@typescript-eslint/typedef":
    - error
  brace-style:
    - error
    - 1tbs
    - allowSingleLine: true
  comma-dangle:
    - error
    - arrays: always-multiline
      objects: always-multiline
      imports: always-multiline
      exports: always-multiline
      functions: always-multiline
  indent:
    - error
    - 4
    - SwitchCase: 1

  linebreak-style:
    - error
    - windows
  no-multi-spaces:
    - error
  no-multiple-empty-lines:
    - error
    - max: 2
      maxEOF: 0
  func-call-spacing:
    - error
    - never
  no-trailing-spaces: error
  object-curly-spacing:
    - error
    - always
  padding-line-between-statements:
    - error
    - blankLine: always
      prev: "*"
      next: return
    - blankLine: always
      prev:
        - const
        - let
        - var
      next: "*"
    - blankLine: any
      prev:
        - const
        - let
        - var
      next:
        - const
        - let
        - var
  quotes:
    - error
    - single
    - allowTemplateLiterals: true
  semi:
    - error
    - always
  semi-spacing: error
  space-before-blocks: error
  space-before-function-paren:
    - error
    - never
